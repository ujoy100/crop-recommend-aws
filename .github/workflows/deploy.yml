name: Deploy to AWS Elastic Beanstalk (Dockerfile, AL2023)

on:
  push:
    branches:
      - main

env:
  AWS_REGION: eu-central-1
  APPLICATION_NAME: crop-recommender-app
  ENVIRONMENT_NAME: crop-recommender-env
  S3_BUCKET: crop-recommender-app-ujoy100

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # ✅ Step 1: Checkout source
      - name: Checkout source
        uses: actions/checkout@v4

      # ✅ Step 2: Configure AWS credentials
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      # ✅ Step 3: Create deployment zip (includes Dockerfile)
      - name: Create deployment package
        run: |
          zip -r deploy.zip Dockerfile app.py requirements.txt static templates RF_model.pkl

      # ✅ Step 4: Ensure S3 bucket exists
      - name: Ensure S3 bucket exists
        run: |
          aws s3api head-bucket --bucket $S3_BUCKET 2>/dev/null || \
          aws s3 mb s3://$S3_BUCKET --region $AWS_REGION

      # ✅ Step 5: Upload zip to S3
      - name: Upload to S3
        run: |
          aws s3 cp deploy.zip s3://$S3_BUCKET/deploy-${GITHUB_RUN_NUMBER}.zip

      # ✅ Step 6: Create Elastic Beanstalk Application Version
      - name: Create EB Application Version
        run: |
          aws elasticbeanstalk create-application-version \
            --application-name $APPLICATION_NAME \
            --version-label "ver-${GITHUB_RUN_NUMBER}" \
            --source-bundle S3Bucket=$S3_BUCKET,S3Key=deploy-${GITHUB_RUN_NUMBER}.zip

      # ✅ Step 7: Deploy new version to environment
      - name: Deploy to Elastic Beanstalk
        run: |
          aws elasticbeanstalk update-environment \
            --application-name $APPLICATION_NAME \
            --environment-name $ENVIRONMENT_NAME \
            --version-label "ver-${GITHUB_RUN_NUMBER}"
