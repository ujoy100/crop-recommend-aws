name: Deploy to AWS Elastic Beanstalk

on:
  push:
    branches:
      - main

env:
  AWS_REGION: eu-central-1              # Your AWS region
  APPLICATION_NAME: crop-recommender-app
  ENVIRONMENT_NAME: crop-recommender-env
  DOCKER_IMAGE_NAME: crop-recommender-app
  ECR_REPOSITORY: crop-recommender-repo
  AWS_ACCOUNT_ID: 610495549917          # Replace with your AWS account ID

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout source
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      # Step 1: Ensure ECR repository exists (creates if missing)
      - name: Create ECR repository if not exists
        run: |
          aws ecr describe-repositories --repository-names $ECR_REPOSITORY --region $AWS_REGION || \
          aws ecr create-repository --repository-name $ECR_REPOSITORY --region $AWS_REGION

      # Step 2: Log in to Amazon ECR
      - name: Log in to Amazon ECR
        run: |
          aws ecr get-login-password --region $AWS_REGION | \
          docker login --username AWS --password-stdin $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com

      # Step 3: Build and tag Docker image
      - name: Build and tag Docker image
        run: |
          docker build -t $DOCKER_IMAGE_NAME .
          docker tag $DOCKER_IMAGE_NAME:latest \
          $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/$ECR_REPOSITORY:latest

      # Step 4: Push Docker image to Amazon ECR
      - name: Push Docker image to Amazon ECR
        run: |
          docker push $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/$ECR_REPOSITORY:latest

      # Step 5: Deploy to Elastic Beanstalk
      - name: Deploy to Elastic Beanstalk
        run: |
          zip -r app.zip . -x "*.git*" "venv/*"
          aws s3 cp app.zip s3://$APPLICATION_NAME/app-${{ github.run_number }}.zip

          aws elasticbeanstalk create-application-version \
            --application-name $APPLICATION_NAME \
            --version-label "ver-${{ github.run_number }}" \
            --source-bundle S3Bucket=$APPLICATION_NAME,S3Key=app-${{ github.run_number }}.zip

          aws elasticbeanstalk update-environment \
            --application-name $APPLICATION_NAME \
            --environment-name $ENVIRONMENT_NAME \
            --version-label "ver-${{ github.run_number }}"
